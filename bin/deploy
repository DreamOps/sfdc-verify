#!/usr/bin/env node

var db = require('../data-access.js');
var sfdc = require('../sfdc/metadata.js');

var sfdc_query_timeout = process.env.sfdc_query_timeout;

var outstanding = 0;

function beginDeployTask(){
  db.getLogins(function(logins){
    for(var dc in logins){
      outstanding++;
      try{
        (function(dc){
          console.log(dc + ': Deploying...');
          sfdc.beginDeploy(logins[dc], function(err, id){
            if(err){
              console.log("Error:");
              console.log(err);
              return;
            }
            db.saveDeployRequest(dc,id);
            console.log(dc + ': Request Saved');
            outstanding--;
            checkDeployTask(dc);
          });
        }(dc));
      }
      catch(err){
        console.log(err);
      }
    }
  });
}

function checkDeployTask(datacenter){
  db.getLogins(function(logins){
    for(var dc in logins){
      if(datacenter && dc !== datacenter) continue;
      (function(dc){
        console.log(dc + ': Looking for outstanding deployments...');
        var outstandingIds = db.getDeployRequests(dc, function(ids){
          for(var key in ids){
            (function(id){
              console.log(dc + '-' + id + ': Checking status...');
              sfdc.checkDeployStatus(logins[dc],id,function(err,times){
                if(err){
                  console.log('Error:');
                  console.log(err);
                  return;
                }
                db.clearCompletedDeployRequest(dc,id);
                db.saveDeployTime(dc,times);
                console.log(dc + ': Saved result ' + times.queuedSeconds);
              },sfdc_query_timeout);
            }(ids[key].asyncProcessId))
          }
        });
      }(dc));
    }
  });
}

beginDeployTask();
checkDeployTask();


setInterval(function(){
  if(outstanding === 0){
    console.log('Exiting.');
    process.exit();
  }
  else {
    console.log(outstanding + ' deploys not yet kicked off.');
  }
},1000 * 60);
